var app,config,express,host,http,mongoose,passport,path,routes,server,startServer;config=require("./config/config"),express=require("express"),http=require("http"),mongoose=require("mongoose"),passport=require("passport"),path=require("path"),routes=require("./lib/routes"),app=express(),server=http.createServer(app),app.locals.config=config=config[app.settings.env],app.locals.mongoose=mongoose,app.locals.passport=passport,app.set("port",process.env.PORT||5e3),app.use(express.bodyParser()),app.use(express.cookieParser()),app.use(express.favicon()),app.use(express.logger("dev")),app.use(express.json()),app.use(passport.initialize()),app.use(passport.session()),app.use(express.methodOverride()),app.use(express.session({secret:"JCPYayOrNay"})),app.use(express.urlencoded()),app.use(function(a,b,c){return b.header("Access-Control-Allow-Origin","*"),b.header("Access-Control-Allow-Methods","*"),b.header("Access-Control-Allow-Headers","*"),c()}),routes.configure(app),passport.serializeUser(function(a,b){return b(null,a.id)}),passport.deserializeUser(function(a,b){return User.findById(a,function(a,c){return b(a,c)})}),require("./lib/oauth-facebook").configure(app),require("./lib/oauth-google").configure(app),require("./lib/oauth-twitter").configure(app),app.configure("development",function(){return app.use(express.errorHandler()),app.use(express["static"](path.join(__dirname,"../yay-or-nay-front-end/build")))}),app.configure("production",function(){}),host=process.env.MONGOLAB_URI||process.env.MONGOHQ_URL||config.database.host,mongoose.connect(host,null,function(a){return a?(console.log("There was a problem connecting to MongoDB host "+host+": "+a),process.exit()):(console.log("Successfully connecting to MongoDB host "+host),startServer())}),startServer=function(){return server.listen(app.get("port"),function(){return console.log("Express server listening on port "+app.get("port"))})};